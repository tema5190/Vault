// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Vault.DATA;
using Vault.DATA.Enums;

namespace Vault.DATA.Migrations
{
    [DbContext(typeof(VaultContext))]
    partial class VaultContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vault.DATA.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardNumber");

                    b.Property<int>("CardType");

                    b.Property<string>("Name");

                    b.Property<string>("Owner");

                    b.Property<DateTime>("RefillDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Vault.DATA.Models.RefillTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<int?>("CreditCardId");

                    b.Property<string>("Description");

                    b.Property<int?>("TargetId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardId");

                    b.HasIndex("TargetId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Vault.DATA.Models.Target", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal?>("MoneyGoal");

                    b.Property<DateTime>("TargetEnd");

                    b.Property<DateTime>("TargetStart");

                    b.Property<int>("TargetType");

                    b.Property<string>("Title");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("Vault.DATA.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Vault.DATA.CreditCard", b =>
                {
                    b.HasOne("Vault.DATA.Models.User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Vault.DATA.Models.RefillTransaction", b =>
                {
                    b.HasOne("Vault.DATA.CreditCard", "CreditCard")
                        .WithMany("Transactions")
                        .HasForeignKey("CreditCardId");

                    b.HasOne("Vault.DATA.Models.Target", "Target")
                        .WithMany("Transactions")
                        .HasForeignKey("TargetId");

                    b.HasOne("Vault.DATA.Models.User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Vault.DATA.Models.Target", b =>
                {
                    b.HasOne("Vault.DATA.Models.User")
                        .WithMany("Targets")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
